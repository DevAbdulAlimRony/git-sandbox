- Detached HEAD: You can look around, make experimental changes and commit them. And you can discard any commits you make in this state without impacting any branches by switching back to a branch.

- Traveling back to before a commit: git checkout <commit-hash>  (Now head referencing to a commit- detached head)

- Traveling Forward: Reattached the Head- Just switch to a existing or instantly new created branch, head will be reattached to that branch.

- Switch to Previous Branch: git branch -

- Travel back to a specific number of commit or commits: git checkout HEAD~3 (Before 3 commits)

- Back to Last Commit for a/multiple File: git checkout HEAD fileName or, git checkout -- fileName

- Discard Changes: git restore fileName

- Back to Most Recent Commit- git restore --resource HEAD~1 fileName. If we commit to changes, the will be lost. No undoable.

- Do not Commit this secret file: git restore --staged secrets.php

- Regular Reset(Undoing Commits): git reset <commit-hash> . Ex. Uncommit and Commit to another master

- Hard Reset: git reset --hard <commit-hash>. Remove from Working Directory.

- git revert: Similar to git rest in that they both 'undo' changes, but they accomplush it in a different way. Git revert instead creates a brand new commit which reverses/undos the changes from a commit, because it results in a new commit, you will be prompted to enter a new commit message. Undo commit, but preserve history. Better to use when collaborating.